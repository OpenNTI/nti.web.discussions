.discussion-editor-container {
	--editor-padding: 1rem;
	background: white;
	
	&.saving {
		pointer-events: none;

		& .title,
		& .body,
		& .controls .button {
			opacity: 0.5;
		}
	}
}

.discussion-editor-container.full {
	&.dialog {
		border: 1px solid var(--border-grey-light);
		border-radius: 10px;
		width: 100vw;
		max-width: 780px;
		overflow: hidden;
	}

	&.large,
	&.small {
		padding: 0;
		display: grid;
		grid-template-columns: calc(40px + (2 * var(--editor-padding))) 1fr;
		grid-template-rows: auto auto auto;

		& .identity {
			grid-column: 1 / 1;
			grid-row: 1 / 1;
			padding: var(--editor-padding);

			& :global(.avatar) {
				width: 40px;
				height: 40px;
				border-radius: 40px;
			}
		}

		& .title {
			grid-column: 2 / 2;
			grid-row: 1 / 1;
			padding-left: 0;
		}

		& .body {
			grid-column: 1 / span 2;
			grid-row: 2 / 2;
			padding-top: 0;
		}

		& .controls {
			grid-column: 1 / span 2;
			grid-row: 3 / 3;
		}
	}
}

.discussion-editor-container.body-only {

}

.discussion-editor-container.no-title {
	display: grid;
	padding: 0 var(--editor-padding);
	grid-template-columns: 40px 1fr;
	grid-template-rows: 40px auto auto;

	& .identity {
		grid-column: 1 / 1;
		grid-row: 1 / 1;

		& :global(.avatar) {
			width: 100%;
			height: auto;
			border-radius: 40px;
		}
	}

	& .body {
		grid-column: 2 / 2;
		grid-row: 1 / span 2;
	}

	& .controls {
		grid-column: 2 / 2;
		grid-row: 3 / 3;
	}
}


.title {
	padding: var(--editor-padding);
	position: relative;

	& :global(.nti-draft-core-container .nti-draft-core .DraftEditor-root) {
		padding: 0;
		padding-bottom: 0;
		min-height: 1rem;
		color: var(--primary-grey);
		font-size: 1.75rem;
		font-weight: 300;
		line-height: 1.3;
	}

	& .title-error {
		position: absolute;
		top: 45px;
		left: 0;
	}

	& .title-limit {
		position: absolute;
		top: auto; bottom: 0;
		left: auto; right: var(--editor-padding);
		background: white;
		display: none;

		&:global(.over) {
			display: block;
		}
	}
}

.body {
	padding: var(--editor-padding);
	overflow: hidden;
	position: relative;

	& :global(.nti-draft-core-container .nti-draft-core .DraftEditor-root) {
		padding: 0;
		padding-bottom: 3rem;
		min-height: 5rem;
		color: var(--primary-grey);
		font-size: 0.875rem;
		font-weight: 400;
		line-height: 1.3;
	}

	& .body-error {
		position: absolute;
		top: auto; bottom: 0.5rem;
		left: var(--editor-padding);
	}
}

.controls {
	position: relative;

	& .editor {
		padding: 0 var(--editor-padding) 2px calc(var(--editor-padding) / 2);
		display: flex;
		flex-direction: row;
		align-items: center;
	}

	& .post {
		padding: 0.5rem var(--editor-padding);
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: flex-end;
		background-color: var(--panel-background);
		border-top: 1px solid var(--border-grey-light);
	}

	& .control-group {
		flex: 0 0 auto;
		display: flex;
		flex-direction: row;
		align-items: center;

		&.main {
			flex: 1 1 auto;
		}

		&.expanded {
			& .control-group-icon {
				display: none;
				visibility: hidden;
			}

			& .control-group-items {
				display: block;
				visibility: visible;
			}
		}

		&.active:not(.expanded) {
			& .control-group-icon {
				background: var(--tertiary-grey);
				color: var(--primary-grey);
			}

			& .control-group-items {
				visibility: visible;
				display: block;
				position: absolute;
				top: auto; bottom: calc(100% + 4px);
				left: var(--editor-padding); right: var(--editor-padding);

				background: white;
				border-radius: 4px;
				box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.15);
			}
		}

		& .control-group-items {
			visibility: hidden;
			display: none;
		}
	}

	& .save {
		flex: 0 0 200px;
		border-radius: 4px;
		padding: 12px 0.5rem;
		text-align: center;

		&.saving {
			padding: 7px 0.5rem 8px;
		}
	}

	& .cancel {
		flex: 0 0 auto;
		background: none;
		color: var(--secondary-grey);

		& + .save {
			flex: 0 0 150px;
		}
	}

	& .button {
		background: none;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		width: 2.5rem;
		height: 2.5rem;
		border-radius: 2.5rem;
		padding: 0.5rem;
		font-size: 1rem;
		vertical-align: middle;
		cursor: pointer;

		& button {
			color: inherit;
		}

		&:hover {
			background: #EAEDF7;
		}

		&.green {
			color: var(--secondary-green);
		}

		&.red {
			color: #E02020;
		}

		&.purple {
			color: #1F3E94;
		}

		&.blue {
			color: var(--primary-blue);
		}
	}

}